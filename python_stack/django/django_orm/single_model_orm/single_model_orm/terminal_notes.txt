1: Run the shell and import your User model

(djangoEnv) C:\Users\Bryce\Desktop\CodingDojo\python_stack\django\django_intro\single_model_orm>python manage.py shell
Python 3.6.4 (v3.6.4:d48eceb, Dec 19 2017, 06:54:40) [MSC v.1900 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>> from users_app.models import User

2: Query: Create 3 new users

>>> User.objects.create(first_name = "Bryce", last_name = "Withers", email_address = "b@w.com", age = 25)
<User: User object (1)>
>>> User.objects.create(first_name = "Monty", last_name = "Withers", email_address = "m@w.com", age = 3)  
<User: User object (2)>
>>> User.objects.create(first_name = "Mackenzie", last_name = "Lane", email_address = "m@l.com", age = 24)   
<User: User object (3)>

3: Query: Retrieve all the users

>>> User.objects.get()  
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Users\Bryce\Desktop\CodingDojo\python_stack\my_environments\djangoEnv\lib\site-packages\django\db\models\manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Users\Bryce\Desktop\CodingDojo\python_stack\my_environments\djangoEnv\lib\site-packages\django\db\models\query.py", line 412, in get
    (self.model._meta.object_name, num)
users_app.models.User.MultipleObjectsReturned: get() returned more than one User -- it returned 3!
>>>
>>> User.objects.all()
<QuerySet [<User: User object (1)>, <User: User object (2)>, <User: User object (3)>]>

4: Query: Retrieve the last user

>>> User.objects.get(id=3)
<User: User object (3)>

also tried:

>>> User.objects.last()
<User: User object (3)>

5: Query: Retrieve the first user

>>> User.objects.get(id=1)
<User: User object (1)>

also tried: 

>>> User.objects.first()
<User: User object (1)>

6: Query: Change the user with id=3 so their last name is Pancakes.

>>> Mackenzie = User.objects.get(id=3)
>>> Mackenzie.last_name = "Pancakes"
>>> Mackenzie.save()

7: Query: Delete the user with id=2 from the database

>>> Monty = User.objects.get(id=2)
>>> Monty.delete()
(1, {'users_app.User': 1})

8: Query: Get all the users, sorted by their first name

>>> User.objects.all().order_by("first_name")
<QuerySet [<User: User object (1)>, <User: User object (3)>]>

then I tried this!

>>> for user in User.objects.all():
...     print(user.first_name)
...
Bryce
Mackenzie
>>>

____________________________________________________
rest of my code terminal AFTER "makemirgrations"

(djangoEnv) C:\Users\Bryce\Desktop\CodingDojo\python_stack\django\django_intro\single_model_orm>python manage.py makemigrations
Migrations for 'users_app':
  users_app\migrations\0001_initial.py
    - Create model User

(djangoEnv) C:\Users\Bryce\Desktop\CodingDojo\python_stack\django\django_intro\single_model_orm>python manage.py migrate
Operations to perform:
  Apply all migrations: admin, auth, contenttypes, sessions, users_app
Running migrations:
  Applying contenttypes.0001_initial... OK
  Applying auth.0001_initial... OK
  Applying admin.0001_initial... OK
  Applying admin.0002_logentry_remove_auto_add... OK
  Applying admin.0003_logentry_add_action_flag_choices... OK
  Applying contenttypes.0002_remove_content_type_name... OK
  Applying auth.0002_alter_permission_name_max_length... OK
  Applying auth.0003_alter_user_email_max_length... OK
  Applying auth.0004_alter_user_username_opts... OK
  Applying auth.0005_alter_user_last_login_null... OK

(djangoEnv) C:\Users\Bryce\Desktop\CodingDojo\python_stack\django\django_intro\single_model_orm>python manage.py shell
Python 3.6.4 (v3.6.4:d48eceb, Dec 19 2017, 06:54:40) [MSC v.1900 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>> from users_app.models import User
>>> User.objects.create(first_name = "Bryce", last_name = "Withers", email_address = "b@w.com", age = 25)
<User: User object (1)>
>>> User.objects.create(first_name = "Monty", last_name = "Withers", email_address = "m@w.com", age = 3)  
<User: User object (2)>
>>> User.objects.create(first_name = "Mackenzie", last_name = "Lane", email_address = "m@l.com", age = 24)   
<User: User object (3)>
>>> User.objects.get()  
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Users\Bryce\Desktop\CodingDojo\python_stack\my_environments\djangoEnv\lib\site-packages\django\db\models\manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Users\Bryce\Desktop\CodingDojo\python_stack\my_environments\djangoEnv\lib\site-packages\django\db\models\query.py", line 412, in get
    (self.model._meta.object_name, num)
users_app.models.User.MultipleObjectsReturned: get() returned more than one User -- it returned 3!
>>>
>>> User.objects.all()
<QuerySet [<User: User object (1)>, <User: User object (2)>, <User: User object (3)>]>
>>> User.objects.get(id=3)
<User: User object (3)>
>>> User.objects.get(id=1)
<User: User object (1)>
>>> User.objects.first()
<User: User object (1)>
>>> User.objects.last()
<User: User object (3)>
>>> Mackenzie = User.objects.get(id=3)
>>> Mackenzie.last_name = "Pancakes"
>>> Mackenzie.save()
>>> User.objects.get(id=2)
<User: User object (2)>
>>> Monty = User.objects.get(id=2)
>>> Monty.delete()
(1, {'users_app.User': 1})
>>> User.objects.filter(first_name)
Traceback (most recent call last):
  File "<console>", line 1, in <module>
NameError: name 'first_name' is not defined
>>> User.objects.all().order_by("first_name")
<QuerySet [<User: User object (1)>, <User: User object (3)>]>
>>> for user in User.objects.all():
...     print(user.first_name)
...
Bryce
Mackenzie
>>>